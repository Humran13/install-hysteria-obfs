#!/bin/bash

set -e

SERVICE_NAME="hysteria"
INSTALL_DIR="/etc/hysteria"
BIN_PATH="/usr/local/bin/hysteria"
CONFIG_PATH="$INSTALL_DIR/config.yaml"
LOG_FILE="/var/log/hysteria.log"

echo "🔧 Hysteria Installer - Pro Edition"
echo "----------------------------------"

# Check if already installed
if systemctl is-active --quiet $SERVICE_NAME; then
  echo "⚠️ Hysteria is already installed. Please uninstall first."
  exit 1
fi

# Create install dir
mkdir -p $INSTALL_DIR

# Prompt for config
read -p "Enter port to use (default 5678): " PORT
PORT=${PORT:-5678}

# Check for port conflict
if lsof -i:$PORT >/dev/null 2>&1; then
  echo "❌ Port $PORT is already in use. Choose another."
  exit 1
fi

read -p "Set authentication password: " AUTH
if [[ -z "$AUTH" ]]; then
  echo "❌ Auth cannot be empty."
  exit 1
fi

read -p "Enable obfuscation? (y/n): " USE_OBFS
if [[ "$USE_OBFS" == "y" ]]; then
  read -p "Enter obfuscation password: " OBFS_PASS
  if [[ -z "$OBFS_PASS" ]]; then
    echo "❌ Obfuscation password cannot be empty."
    exit 1
  fi
fi

read -p "Use self-signed TLS cert? (y = yes, n = use your own): " USE_TLS
if [[ "$USE_TLS" == "y" ]]; then
  echo "📜 Generating self-signed cert..."
  openssl req -x509 -newkey rsa:2048 -nodes -keyout $INSTALL_DIR/server.key -out $INSTALL_DIR/server.crt -days 365 -subj "/CN=localhost"
  TLS_CONFIG="
tls:
  cert: $INSTALL_DIR/server.crt
  key: $INSTALL_DIR/server.key"
else
  read -p "Enter full path to your TLS cert file: " TLS_CERT
  read -p "Enter full path to your TLS key file: " TLS_KEY
  TLS_CONFIG="
tls:
  cert: $TLS_CERT
  key: $TLS_KEY"
fi

# Write config file
cat > $CONFIG_PATH <<EOF
listen: :$PORT
auth:
  type: password
  password: $AUTH
$TLS_CONFIG
bandwidth:
  up: 100 mbps
  down: 100 mbps
EOF

if [[ "$USE_OBFS" == "y" ]]; then
cat >> $CONFIG_PATH <<EOF
obfs:
  type: salamander
  password: $OBFS_PASS
EOF
fi

# Download binary
echo "⬇️ Downloading Hysteria binary..."
ARCH=$(uname -m)
case "$ARCH" in
  x86_64) ARCH_TAG="amd64" ;;
  aarch64) ARCH_TAG="arm64" ;;
  *) echo "❌ Unsupported architecture: $ARCH"; exit 1 ;;
esac

LATEST=$(curl -s https://api.github.com/repos/apernet/hysteria/releases/latest | grep "browser_download_url.*linux-$ARCH_TAG" | cut -d '"' -f 4)
curl -Lo hysteria $LATEST
chmod +x hysteria
mv hysteria $BIN_PATH

# Systemd service
echo "🛠️ Creating systemd service..."
cat > /etc/systemd/system/$SERVICE_NAME.service <<EOF
[Unit]
Description=Hysteria2 VPN Server
After=network.target

[Service]
ExecStart=$BIN_PATH server -c $CONFIG_PATH
Restart=on-failure
LimitNOFILE=1048576
AmbientCapabilities=CAP_NET_BIND_SERVICE
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
NoNewPrivileges=true
ProtectSystem=full
ProtectHome=true
ReadWritePaths=$INSTALL_DIR
StandardOutput=append:$LOG_FILE
StandardError=append:$LOG_FILE

[Install]
WantedBy=multi-user.target
EOF

# Start service
systemctl daemon-reexec
systemctl daemon-reload
systemctl enable --now $SERVICE_NAME

echo "✅ Hysteria installation complete."
echo "🌐 Running on port $PORT with TLS and obfuscation: $USE_OBFS"
